/*
attempt	: 1
time	: 24ms 88%
O	: logN
method	: InOrder
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
        int result(0);
        InOrder(root, &k, &result);
        return result;
    }
    void InOrder(TreeNode* root, int* k, int* result){
        if(!root)   return; //end of loop
        InOrder(root->left, k, result);  //go left first
        if((*k) == 1)  *result = root->val; //assign result
        (*k)--;
        InOrder(root->right, k, result); //go right last
    }
};