/*
attempt	: 1
time	: 4ms
O	: N
method	: recursion
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(!head)   return nullptr;
        helper(&head, &n);
        return head;
    }
    void helper(ListNode** head, int* number){
        if((*head)->next) helper(&((*head)->next), number);
        if(*number == 1) (*head) = (*head)->next;
        (*number)--;
    }
};