/*
attempt	: 1
time	: 56ms	22%
O	: N (best)
method	: DFS
improve	: 1. use DFS with recursion instead of loop
	  2. use nums itself instead of recreate a new array
 	     by write a -1 to visited cell
*/
class Solution {
public:
    int arrayNesting(vector<int>& nums) {
        int max = 0;
        std::vector<int> log(nums.size(), 1);
        for(int i=0; i<nums.size(); i++){
            if(log[i] == 1){
                log[i] = 0;
                int start = i, count = 1, temp = nums[i];
                while(temp != start){
                    count++;
                    temp = nums[temp];
                    log[temp] = 0;
                }
                max = fmax(count, max);
            }
        }
        return max;
    }
};