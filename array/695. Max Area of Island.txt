/*
attempt	: 1
time	: NA
O	: N^2
method	: going through all points + recurrsion
*/

class Solution {
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int result(0);
        for(int i=0; i<grid.size(); i++){
            for(int j=0; j<grid[0].size(); j++){
                if(grid[i][j] == 1){
                    result = fmax(helper(grid, i, j), result);
                }
            }
        }
        return result;
    }
    
    int helper(std::vector<std::vector<int>> &grid, int i, int j){
        if(i < 0 || (i >= grid.size()) || (j < 0) || (j >= grid[0].size()))
            return 0;
        else if(grid[i][j] == 0)
            return 0;
        grid[i][j] = 0;
        return (1 + helper(grid, i+1, j) + helper(grid, i-1, j) + helper(grid, i, j+1) + helper(grid, i, j-1));
    }
};